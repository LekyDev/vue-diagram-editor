<h1>Vue Diagram Editor component</h1>
<h2 id="introduction">Introduction</h2>
<p>The main purpose of this component is to make it possible to use any component within each node of the diagram.</p>
<p>Vue-Diagram-Editor features:</p>
<ul>
  <li><strong>scoped-slot for node</strong></li>
  <li>ripple (pulsable) node</li>
  <li>any number of instances per page</li>
  <li>customizable node color</li>
  <li>customizable node pulse color</li>
</ul>
<p>
  Special thanks to the author of the
  <a href="https://github.com/gwenaelp/vue-diagrams" target="_blank"><code>gwenaelp/vue-diagrams</code></a>
   package.
</p>

<h2 id="getting-started">Getting Started</h2>
<p>
  It's recommended to install vue-diagram-editor via npm, and build your app using a bundler like
  <a href="https://webpack.js.org/">webpack</a>.
</p>
<textarea data-lang="shell">npm install vue-diagram-editor</textarea>
<p><strong>Requires Vue 2.6+</strong></p>
<p>Simple example</p>
<div class="code-wrapper"><textarea data-lang="vue">{{files.vue_simple_example}}</textarea></div>
<div class="mt-3 mb-3">
  <simple-example class="js-vue"></simple-example>
</div>
<br>
<p>
  If you just don't want to use webpack or any other bundlers,
  you can simply include the standalone UMD build in your page.
  In this way, make sure Vue as a dependency is included before vue-diagram-editor.
</p>
<div class="code-wrapper"><textarea data-lang="htmlmixed">{{files.vue_simple_example_umd}}</textarea></div>
{{> guides/data-structure}}


<hr>
<h2 id="api">API</h2>
{{> api/node}}
{{> api/link}}
{{> api/props}}
{{> api/methods}}
{{> api/events}}
{{> api/slots}}
